(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5bf4c0dd"],{"09b5":function(e,i,n){"use strict";n.d(i,"a",(function(){return t})),n.d(i,"e",(function(){return s})),n.d(i,"d",(function(){return l})),n.d(i,"f",(function(){return a})),n.d(i,"c",(function(){return c})),n.d(i,"b",(function(){return r}));var t={initapp:{}};t.initapp.html='<div id="app">\n  <clipper-basic class="my-clipper" src="example.jpg" />\n</div>',t.initapp.js="new Vue({\n  el: '#app'\n})",t.initapp.css=".my-clipper {\n  width: 100%;\n  max-width: 700px;\n}",t.upload={},t.upload.html='<div id="app">\n  <input type="file" @change="upload($event)">\n  <clipper-basic class="my-clipper" :src="imgURL">\n    <div class="placeholder" slot="placeholder">No image</div>\n  </clipper-basic>\n</div>',t.upload.js="new Vue({\n  el: '#app',\n  data: {\n    imgURL: ''\n  },\n  methods: {\n    upload: function(e){\n      if (e.target.files.length !== 0) {\n        if(this.imgURL) URL.revokeObjectURL(this.imgURL)\n        this.imgURL = window.URL.createObjectURL(e.target.files[0]);\n      }\n    }\n  }\n})",t.upload.css=".placeholder {\n  text-align: center;\n  padding: 20px;\n  background-color: lightgray;\n}",t.upload2={},t.upload2.html='<div id="app">\n  <clipper-upload v-model="imgURL">upload image</clipper-upload>\n  <clipper-basic class="my-clipper" :src="imgURL">\n    <div class="placeholder" slot="placeholder">No image</div>\n  </clipper-basic>\n</div>',t.upload2.js="new Vue({\n    el: '#app',\n    data: {\n      imgURL: ''\n    }\n})",t.result={},t.result.html='<button @click="getResult">clip image</button>\n<clipper-basic class="my-clipper" ref="clipper" :src="imgURL">\n    <div class="placeholder" slot="placeholder">No image</div>\n</clipper-basic>\n<div>\n    <div>result:</div>\n    <img class="result" :src="resultURL" alt="">\n</div>',t.result.js1="data: {\n  imgURL: '',\n  resultURL: ''\n}",t.result.js='getResult: function () {\n  const canvas = this.$refs.clipper.clip();//call component\'s clip method\n  this.resultURL = canvas.toDataURL("image/jpeg", 1);//canvas->image\n}',t.preview={},t.preview.html='<clipper-basic \n  class="my-clipper" \n  ref="clipper" \n  :src="imgURL" \n  preview="my-preview" >\n  <div class="placeholder" slot="placeholder">No image</div>\n</clipper-basic>\n<div>\n  <div>preview:</div>\n  <clipper-preview name="my-preview" class="my-clipper">\n    <div class="placeholder" slot="placeholder">preview area</div>\n  </clipper-preview>\n</div>',t.full='<meta charset="utf-8">\n<title>vuejs-clipper demo</title>\n<script src="https://cdn.jsdelivr.net/npm/vue@2.5.17/dist/vue.js"><\/script>\n<script src="./vuejs-clipper.umd.js"><\/script>\n<link rel="stylesheet" href="./vuejs-clipper.css">\n<div id="app">\n    <button>\n      <clipper-upload v-model="imgURL">upload image</clipper-upload>\n    </button>\n    <button @click="getResult">clip image</button>\n    <clipper-basic class="my-clipper" ref="clipper" :src="imgURL" preview="my-preview">\n        <div class="placeholder" slot="placeholder">No image</div>\n    </clipper-basic>\n    <div>\n        <div>preview:</div>\n        <clipper-preview name="my-preview" class="my-clipper">\n            <div class="placeholder" slot="placeholder">preview area</div>\n        </clipper-preview>\n    </div>\n    <div>\n        <div>result:</div>\n        <img class="result" :src="resultURL" alt="">\n    </div>\n</div>\n<script>\n    new Vue({\n        el: \'#app\',\n        data: {\n            imgURL: \'\',\n            resultURL: \'\'\n        },\n        methods: {\n            getResult: function () {\n                const canvas = this.$refs.clipper.clip();//call component\'s clip method\n                this.resultURL = canvas.toDataURL("image/jpeg", 1);//canvas->image\n            }\n        }\n    })\n<\/script>\n<style>\n    .my-clipper {\n        width: 100%;\n        max-width: 700px;\n    }\n\n    .placeholder {\n        text-align: center;\n        padding: 20px;\n        background-color: lightgray;\n    }\n</style>';var s={html:'<clipper-basicref="clipper" \n  ref="clipper"\n  :style="basicStyle" \n  src="long.jpg"\n  @load="imgLoad" \n/>',js:"data: () => {\n  return {\n      maxWidth: 700,\n      maxHeight: 500,\n      based: 850\n  };\n},\nmethods: {\n  imgLoad: function() {\n      const imgRatio = this.$refs.clipper.imgRatio;\n      if(imgRatio < 1) this.based =  this.maxHeight*imgRatio;\n      else this.based = this.maxWidth;\n  },\n},\ncomputed: {\n  basicStyle : function() {\n      return {\n          maxWidth: this.based + 'px'\n      }\n  }\n}",html2:'<clipper-basic\n  src="long.jpg"\n  :wrapRatio="1"\n/>'},l={const:"const canvas = this.$refs.clipper.clip();",durl:'const jpgURL = canvas.toDataURL("image/jpeg")//to jpg\nconst pngURL = canvas.toDataURL("image/png", 1)//to png',blob:"canvas.toBlob(function(blob) {\n  //...\n});",url:"const vm = this;\nconst canvas = this.$refs.clipper.clip();\ncanvas.toBlob(function(blob){\n    if(vm.resultURL)\n      URL.revokeObjectURL(vm.resultURL)\n    vm.resultURL = URL.createObjectURL(blob)\n})",urles6:"this.$refs.clipper.clip().toBlob(blob=>{\n  if(this.resultURL) URL.revokeObjectURL(this.resultURL)\n  this.resultURL = URL.createObjectURL(blob)\n})",reader:"const vm = this;\nconst canvas = this.$refs.clipper.clip();\ncanvas.toBlob(function(blob){\n    const reader = new FileReader()\n    reader.addEventListener('load' ,function(){\n        vm.resultURL = this.result;\n    })\n    reader.readAsDataURL(blob);\n})"},a={ex1:'<clipper-fixed \n  src="ex2.jpg" \n  shadow="transparent" \n  border-color="transparent"\n  :grid="false"\n/>'},c={basicHtml:'<clipper-basic ref="clipper" src="ex2.jpg" />',basic:"//click buttons",fixed:"//click buttons"},r={script:"const canvas = this.$refs.clipper.clip({ wPixel: <pixel> })"}},"09be":function(e,i,n){},"6c9d":function(e,i,n){"use strict";n.r(i);var t=function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("div",{staticClass:"list-content content"},[n("div",{staticClass:"area"},[n("h2",[e._v("Set pixel of result canvas/image")]),e._m(0),n("div",{staticClass:"basic"},[n("clipper-basic",{ref:"clipper",attrs:{src:"ex1.jpg"}}),n("div",[n("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs",value:e.code.script,expression:"code.script"}]},[n("code",{staticClass:"javascript"})])]),n("div",{staticClass:"flex margin"},[n("span",{staticClass:"w80 label"},[e._v("wPixel")]),n("input",{directives:[{name:"model",rawName:"v-model",value:e.wPixel,expression:"wPixel"}],attrs:{type:"number"},domProps:{value:e.wPixel},on:{input:function(i){i.target.composing||(e.wPixel=i.target.value)}}})]),n("button",{staticClass:"btn btn-block",on:{click:e.clip}},[e._v("get result")])],1),n("h3",[e._v("Result:")]),n("div",[e._v("\n      "+e._s(e.w)+" "+e._s(e.w?"x":"")+" "+e._s(e.h)+"\n    ")]),n("img",{attrs:{src:e.resultURI,alt:""}})])])},s=[function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("p",[e._v("\n      Detail: "),n("a",{attrs:{target:"_blank",href:"https://github.com/timtnleeProject/vuejs-clipper/wiki/Resulting-canvas-size"}},[e._v("Resulting-canvas-size")])])}],l=n("09b5"),a={data:function(){return{code:l["b"],resultURI:"",w:0,h:0,wPixel:500}},methods:{clip:function(){var e=this.$refs.clipper.clip({wPixel:this.wPixel});this.w=e.width,this.h=e.height,this.resultURI=e.toDataURL("image/jpeg")}}},c=a,r=(n("c5a0"),n("2877")),p=Object(r["a"])(c,t,s,!1,null,"103afaee",null);i["default"]=p.exports},c5a0:function(e,i,n){"use strict";var t=n("09be"),s=n.n(t);s.a}}]);
//# sourceMappingURL=chunk-5bf4c0dd.28580d62.js.map